const { EmbedBuilder } = require('discord.js');
const sampQuery = require('samp-query');

module.exports = {
    name: 'sv',
    description: 'üéÆ Muestra el estado del servidor de SA:MP.',
    async execute(message, args) {
        const options = {
            host: '209.222.97.93', // Direcci√≥n IP del servidor
            port: 7777 // Puerto del servidor
        };

        const MAX_RETRIES = 5; // N√∫mero m√°ximo de reintentos
        let retries = 0;

        // Funci√≥n para realizar la consulta al servidor
        const queryServer = () => {
            sampQuery(options, async (error, response) => {
                if (error) {
                    console.error(error);

                    // Si se alcanza el n√∫mero m√°ximo de reintentos, enviar error
                    if (retries < MAX_RETRIES) {
                        retries++;
                        console.log(`Reintentando... (${retries}/${MAX_RETRIES})`);
                        return setTimeout(queryServer, 5000); // Reintentar despu√©s de 5 segundos
                    }

                    // Si se alcanzan los m√°ximos reintentos, enviar mensaje de error
                    const embed = new EmbedBuilder()
                        .setColor('#FF0000')
                        .setAuthor({ name: `‚ùå Error al conectar`, iconURL: message.author.displayAvatarURL() })
                        .setDescription('‚ùå No se pudo conectar al servidor de SA:MP.')
                        .setTimestamp()
                        .setFooter({ text: `${message.author.tag}`, iconURL: message.guild.iconURL() });

                    return message.channel.send({ embeds: [embed] });
                }

                // Si la consulta es exitosa, mostrar la informaci√≥n del servidor
                const embed = new EmbedBuilder()
                    .setColor(0x2373ff)
                    .setAuthor({ name: 'Daptyldroid', iconURL: message.guild.iconURL() })
                    .setDescription(`**‚Ä¢:signal_strength: SA-MP :calling: MOBILE | :computer: PC**\nüñ•Ô∏è **‚Ä¢ HostName**: :small_blue_diamond: Daptyldroid\n:busts_in_silhouette: **‚Ä¢ Conectados**: ${response.online || 0}/${response.maxplayers || 0}\n:computer: **‚Ä¢ Estado**: :white_check_mark: Activo\n:arrow_right: **‚Ä¢ IP**: ${options.host}\n:file_cabinet: **‚Ä¢ Puerto**: ${options.port}\nüñ±Ô∏è **‚Ä¢ Mode**: RolePlay\n:globe_with_meridians: **‚Ä¢ Language**: :flag_es: Es | Espa√±ol`)
                    .setTimestamp()
                    .setFooter({ text: `${message.author.tag}`, iconURL: message.author.displayAvatarURL() });

                message.channel.send({ embeds: [embed] });
            });
        };

        // Iniciar la consulta al servidor
        queryServer();

        // Eliminar el mensaje de comando solo si el embed se env√≠a correctamente
        await message.delete().catch(console.error);
    },
};